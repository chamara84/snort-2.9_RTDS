Rule:

--
Sid:
100000532
--
Summary:
This event is generated when an attempt is made to exploit an SQL injection 
vulnerability in the "BtitTracker" application running on a webserver. Access 
to the file "torrents.php" with SQL commands being passed as the "order" 
parameter may indicate that an exploitation attempt has been attempted. 

--
Impact:
Information gathering and system integrity compromise. Possible unauthorized 
administrative access to the server or application. Possible execution of 
arbitrary code of the attackers choosing in some cases.

--
Detailed Information:
This event indicates that an attempt has been made to inject SQL code from a 
remote machine via the "order" parameter in the "torrents.php" script used by 
the "BtitTracker" application running on a webserver.

If stringent input checks are not performed by the CGI application, it may also 
be possible for an attacker to compromise the database backend for the 
application, the attacker may also be able to execute system binaries or 
malicious code of their choosing.

This event is generated when an attempt is made to gain unauthorized access to 
a CGI application running ona web server. Some applications do not perform 
stringent checks when validating the credentials of a client host connecting to 
the services offered on a host server. This can lead to unauthorized access and 
possibly escalated privileges to that of the administrator. Data stored on the 
machine can be compromised and trust relationships between the victim server 
and other hosts can be exploited by the attacker.

--
Affected Systems:
All systems running CGI applications using BtitTracker
--
Attack Scenarios:
An attacker can inject SQL commands to the backend database for an application 
if user input is not correctly sanitized or checked before passing that input 
to the database.

--
Ease of Attack:
Simple. Exploits exist.

--
False Positives:
None known.

--
False Negatives:
None known.

--
Corrective Action:
Ensure the system is using an up to date version of the software and has had 
all vendor supplied patches applied.

--
Contributors:
Sourcefire Vulnerability Research Team
Nigel Houghton <nigel.houghton@sourcefire.com>
--
Additional References:

SQL Injection Attack and Defense
http://www.securitydocs.com/library/3587

--

